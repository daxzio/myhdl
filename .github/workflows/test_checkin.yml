name: Test myhdl

on: 
  push: 
  pull_request:
  schedule:
    - cron: '0 1 * * 0'
jobs:
#   run_lint:
#     strategy:
#       fail-fast: false # So that one fail doesn't stop remaining tests
#     runs-on: ubuntu-latest      
#     
#     steps:
#       - uses: actions/checkout@v3
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           python -m pip install --upgrade -r requirements.txt
#       - name: Run lint
#         continue-on-error: true
#         run: |
#           pyflakes myhdl
#  
#   build_ghdl:
#     #uses: daxzio/setup-eda/.github/workflows/setup_ghdl.yml@main
#     uses: ./.github/workflows/setup_ghdl.yml
#   build_iverilog:
#     #uses: daxzio/setup-eda/.github/workflows/setup_iverilog.yml@main
#     uses: ./.github/workflows/setup_iverilog.yml
# 
#   build_code_linux:
# 
#     strategy:
#       fail-fast: false # So that one fail doesn't stop remaining tests
#       matrix:
#         python-version: ["3.7", "3.8", "3.9", "3.10", "pypy-3.9", "3.11"]
#         os: [ubuntu-latest]
#         target: [core, iverilog, ghdl]
#     runs-on: ${{ matrix.os }}
#     needs: [run_lint, build_ghdl, build_iverilog]
# 
#     env:
#       CI_TARGET: ${{ matrix.target }}
#       TERM: xterm-256color # for tput in the script file
#     
#     steps:
#       - uses: actions/checkout@v3
#       - name: Report Environment
#         run: |
#           echo "Runing tests with env set to : ${CI_TARGET}"
#       - name: Cache GHDL
#         uses: actions/cache@v3
#         with:
#           path: ${{ needs.build_ghdl.outputs.cache_dir }}
#           key: ${{ needs.build_ghdl.outputs.cache_key }}
#       - name: Cache Icarus
#         uses: actions/cache@v3
#         with:
#           path: ${{ needs.build_iverilog.outputs.cache_dir }}
#           key: ${{ needs.build_iverilog.outputs.cache_key }}
#       - name: Add to PATH
#         run: |
#           echo "${{ needs.build_ghdl.outputs.cache_dir }}/bin" >> $GITHUB_PATH
#           echo "${{ needs.build_iverilog.outputs.cache_dir }}/bin" >> $GITHUB_PATH
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           python -m pip install --upgrade -r requirements.txt
#           python -m pip install .
#       - name: Install depenacy for ghdl
#         if: ${{ env.CI_TARGET == 'ghdl' }}
#         run: |
#           sudo apt install gnat
#       - name: Run Tests
#         run: |
#           make ${CI_TARGET}
  
  build_code_windows:

    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
      matrix:
        python-version: ["3.11"]
        target: [core, ghdl]
    runs-on: windows-latest
    defaults:
      run:
       shell: msys2 {0}
#          shell: bash
#     needs: [run_lint]

    env:
      CI_TARGET: ${{ matrix.target }}
      TERM: xterm-256color # for tput in the script file
    
    steps:
      - uses: actions/checkout@v3
      - uses: crazy-max/ghaction-chocolatey@v2
        name: Choco help
        with:
          args: -h      
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            base-devel
          pacboy: >-
            make:p
        
      - name: Report Environment
        run: |
          echo "Runing tests with env set to : ${{ env.CI_TARGET }}"
      - if: ${{ env.CI_TARGET == 'ghdl' }}
        uses: ghdl/setup-ghdl-ci@nightly
        with:
          backend: llvm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Choco
        run: |
          choco install --yes iverilog
          echo "${{ env.pythonLocation }}\bin" >> $GITHUB_PATH
      - name: Versions
        run: |
          which make
          #which python3
          which python
          which ghdl
          
      - name: Python Venv
        run: |
          ${{ env.pythonLocation }}\python -m venv myhdl_venv
      - name: Install dependencies
        run: |
          . myhdl_venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip install .
      - name: Run Tests
        run: |
          . myhdl_venv/bin/activate
          make ${{ env.CI_TARGET }}
  
#   pypy_release:
#     if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
#     runs-on: ubuntu-latest
#     needs: [build_code_linux]
#     steps:
#       - uses: actions/checkout@v3
#       - name: Make PyPi dist release
#         run: make dist
#       - name: Publish Python distribution to PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           password: ${{ secrets.PYPI_API_TOKEN }}
